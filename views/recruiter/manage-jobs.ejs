<!DOCTYPE html>
<html lang="en">
  <%-include('./layouts/head') %>

  <body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">
      <!-- Sidebar -->
      <%-include('./layouts/sidebar') %>
      <!-- End of Sidebar -->

      <!-- Content Wrapper -->
      <div id="content-wrapper" class="d-flex flex-column">
        <!-- Main Content -->
        <div id="content">
          <!-- Topbar -->
          <%-include('./layouts/topbar') %>
          <!-- End of Topbar -->

          <!-- Begin Page Content -->
          <div class="container-fluid">
            <!-- Page Heading -->
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
              <h1 class="h3 mb-0 text-gray-800">Posted Jobs</h1>
              <a href="<%=generateUrl('recruiter-post-job-page') %>" class="btn btn-primary btn-sm"> <i class="fas fa-plus"></i> Post Job </a>
            </div>

            <div class="card mb-3">
              <div class="card-body">
                <div class="row">
                  <div class="col-md-4 mb-2">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search by job title" />
                  </div>

                  <div class="col-md-3 mb-2">
                    <select id="statusFilter" class="form-control">
                      <option value="">All Statuses</option>
                      <option value="active">Active</option>
                      <option value="inactive">Inactive</option>
                    </select>
                  </div>

                  <div class="col-md-2 mb-2">
                    <button id="filterBtn" class="btn btn-primary w-100">Filter</button>
                  </div>
                </div>
              </div>
            </div>

            <div class="card shadow mb-4">
              <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Posted Jobs List</h6>
              </div>
              <div class="card-body">
                <div class="table-responsive">
                  <table class="table table-bordered table-sm text-dark" width="100%" cellspacing="0">
                    <thead>
                      <tr>
                        <th>Sl. No</th>
                        <th>Title</th>
                        <th>Industry</th>
                        <th>Posted On</th>
                        <th>Deadline</th>
                        <th>Experience</th>
                        <th>Status</th>
                        <th>Application Review</th>
                        <th class="text-center">Action</th>
                      </tr>
                    </thead>
                    <tbody id="job-list"></tbody>
                  </table>

                  <nav class="d-flex justify-content-between align-items-center">
                    <div id="page-info" class="text-muted ps-2"></div>
                    <div class="flex-grow-1 d-flex justify-content-center">
                      <div class="pagination-buttons">
                        <button id="prev-btn" class="pagination-btn">Previous</button>
                        <button id="next-btn" class="pagination-btn">Next</button>
                      </div>
                    </div>
                  </nav>
                </div>
              </div>
            </div>
            <!-- /.container-fluid -->

            <div class="modal fade" id="jobDetailModal" tabindex="-1" role="dialog" aria-labelledby="jobDetailModalLabel" aria-hidden="true">
              <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                <div class="modal-content shadow-lg">
                  <div class="modal-header">
                    <h5 class="modal-title" id="jobDetailModalLabel">Job Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body p-4">
                    <!-- Job Info Grid -->
                    <div class="container-fluid">
                      <%if(isCompanyAdmin){ %>
                      <div class="row mb-3">
                        <div class="col-md-6">
                          <strong>Posted By:</strong>
                          <p class="text-muted mb-0" id="postedBy-modal"></p>
                        </div>
                        <div class="col-md-6">
                          <strong>Designation:</strong>
                          <p class="text-muted mb-0" id="designation-modal"></p>
                        </div>
                      </div>

                      <% } %>

                      <div class="row mb-3">
                        <div class="col-md-6">
                          <strong>Industry:</strong>
                          <p class="text-muted mb-0" id="industry-modal"></p>
                        </div>
                        <div class="col-md-6">
                          <strong>Job Category:</strong>
                          <p class="text-muted mb-0" id="jobCategory-modal"></p>
                        </div>
                      </div>

                      <div class="row mb-3">
                        <div class="col-md-6">
                          <strong>Job Type:</strong>
                          <p class="text-muted mb-0" id="jobType-modal"></p>
                        </div>
                        <div class="col-md-6">
                          <strong>Work Mode:</strong>
                          <p class="text-muted mb-0" id="workMode-modal"></p>
                        </div>
                      </div>

                      <div class="row mb-3">
                        <div class="col-md-6">
                          <strong>Salary:</strong>
                          <p class="text-muted mb-0" id="salary-modal">₹6,00,000 - ₹10,00,000</p>
                        </div>
                        <div class="col-md-6">
                          <strong>Vacancies:</strong>
                          <p class="text-muted mb-0" id="vacancies-modal"></p>
                        </div>
                      </div>

                      <div class="row mb-3">
                        <div class="col-12">
                          <strong>Locations:</strong>
                          <p class="text-muted mb-0" id="locations-modal"></p>
                        </div>
                      </div>

                      <div class="row mb-3">
                        <div class="col-12">
                          <strong>Skills Required:</strong>
                          <p class="text-muted mb-0" id="skills-modal"></p>
                        </div>
                      </div>

                      <hr />

                      <div class="row">
                        <div class="col-12">
                          <strong>Job Description:</strong>
                          <div class="ql-editor job-description" id="description-modal"></div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- End of Main Content -->

        <!-- Footer -->
        <%-include('./layouts/footer') %>
        <!-- End of Footer -->
      </div>
      <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
      <i class="fas fa-angle-up"></i>
    </a>

    <%-include('./layouts/footer-scripts') %>
    <script>
      $(document).ready(function () {
        let currentPage = 1;
        const limit = 10;

        function fetchJobs(currentPage) {
          const search = $("#searchInput").val();
          const status = $("#statusFilter").val();

          $.ajax({
            url: "/recruiter/jobs/by-recruiter/pagination",
            type: "GET",
            data: {
              page: currentPage,
              limit,
              search,
              status
            },
            success: function (response) {
              console.log(response.data);
              renderJobs(response.data);
              setupPagination(response.totalPages, response.page);
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;
              alert(xhr.responseJSON.message || "Something went wrong. Try again later");
            },
          });
        }

        $("#prev-btn").on("click", function () {
          if (currentPage > 1) {
            currentPage--;
            fetchJobs(currentPage);
          }
        });

        $("#next-btn").on("click", function () {
          currentPage++;
          fetchJobs(currentPage);
        });

        function setupPagination(totalPages, currentPage) {
          $("#page-info").text(`Page ${currentPage} of ${totalPages}`);

          $("#prev-btn").prop("disabled", currentPage === 1);
          $("#next-btn").prop("disabled", currentPage === totalPages || totalPages === 0);
        }

        function renderJobs(data) {
          // console.log(data);
           $("#job-list").empty();

          let html = "";
          if (data.length > 0) {
            data.forEach((job, index) => {
              const jobRef = job._id.slice(-6).toUpperCase();
              html += `
                                                    <tr class="fade-in" id='row-${job._id}'>
                                                          <td>${index + 1}</td>
                                                          <td>${job.title} <small class="text-muted">(#${jobRef})</small></td>
                                                          <td>${job.industry.name}</td>
                                                          <td>${new Date(job.createdAt).toLocaleDateString("en-IN", {
                                                            day: "2-digit",
                                                            month: "2-digit",
                                                            year: "numeric",
                                                          })}</td>
                                                           <td>${new Date(job.applicationDeadline).toLocaleDateString("en-IN", {
                                                             day: "2-digit",
                                                             month: "2-digit",
                                                             year: "numeric",
                                                           })}</td>
                                                          <td>${job.minimumExperience}${
                job.maximumExperience !== null ? "-" + job.maximumExperience : "+"
              } years</td>
                                                          <td>
                                                          <select class="form-control status" name="status" data-id="${job._id}">
                                                            <option value="active" ${job.status === "active" ? "selected" : ""}>Active</option>
                                                             <option value="inactive" ${job.status === "inactive" ? "selected" : ""}>Inactive</option>
                                                            </select>
                                                          </td>
                                                          <td>
                                                          <a href="/recruiter/jobs/${job._id}/applicationspage" class="btn btn-sm btn-primary">
                                                           Applications
                                                           </a>
                                                          </td>  
                                                          <td class="text-center">
                                                          <button type="button" class="text-primary view-btn" data-id="${
                                                            job._id
                                                          }" style="background: none; border: none;"> <i class="far fa-eye"></i> </button>
                                                          <a href="/recruiter/jobs/${
                                                            job._id
                                                          }" class="text-warning me-1 edit-btn" ><i class="fas fa-pen"></i></a>
                                                         <button class="text-danger delete-btn" data-id="${
                                                           job._id
                                                         }" style="background: none; border: none;"><i class="fas fa-trash"></i></button>
                                                         </td>

                                                    `;
            });
          } else {
            html += `
                                                <tr>
                                                <td colspan='8' class='text-center'> No Data Found </td>
                                                </tr>
                                                `;
          }
          $("#job-list").html(html);
          $(".fade-in").hide().fadeIn(500);
        }

        fetchJobs(currentPage);

         $("#filterBtn").on("click", function(){
          fetchJobs(1);
        });

        $(document).on("change", ".status", function (e) {
          e.preventDefault();

          const jobId = $(this).data("id");
          const status = $(this).val();

          const jobStatus = $(this);

          // console.log(jobId);

          $.ajax({
            url: `/recruiter/jobs/${jobId}/status-update`,
            type: "PUT",
            contentType: "application/json",
            data: JSON.stringify({ status: status }),
            success: function (response) {
              // console.log(response);
              jobStatus.val(response.jobStatus);
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;
              const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";

              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });
            },
          });
        });

        function capitalizeWords(text) {
          return text
            .split(" ")
            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
            .join(" ");
        }

        $(document).on("click", ".view-btn", function () {
          const jobId = $(this).data("id");
          // console.log(jobId);

          $.ajax({
            url: `/recruiter/jobs/${jobId}/detail-information`,
            type: "GET",
            success: function (response) {
              console.log(response.data);

              const job = response.data;

              $("#postedBy-modal").text(job.postedBy.name);
              $("#designation-modal").text(job.postedBy.designation);
              $("#industry-modal").text(job.industry.name);
              $("#jobCategory-modal").text(job.jobCategory.name);
              $("#jobType-modal").text(capitalizeWords(job.jobType));
              $("#workMode-modal").text(capitalizeWords(job.workMode));

              let salaryText = "";

              if (job.minimumSalary != null && job.maximumSalary != null) {
                salaryText = `${(job.minimumSalary / 100000).toFixed(1)} - ${(job.maximumSalary / 100000).toFixed(1)} LPA`;
              } else if (job.minimumSalary != null) {
                salaryText = `From ${(job.minimumSalary / 100000).toFixed(1)} LPA`;
              } else if (job.maximumSalary != null) {
                salaryText = `Up to ${(job.maximumSalary / 100000).toFixed(1)} LPA`;
              } else {
                salaryText = "";
              }

              $("#salary-modal").text(salaryText);
              $("#vacancies-modal").text(`${job.vacancies !== null ? job.vacancies : ""}`);
              $("#locations-modal").text(job.location.map((item) => item.name).join(", "));
              $("#skills-modal").text(job.skillsRequired.map((item) => item.name).join(", "));
              $("#description-modal").html(job.description);

              $("#jobDetailModal").modal("show");
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;
              const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";

              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });
            },
          });
        });

        $(document).on("click", ".delete-btn", function () {
          const conf = confirm("Do you want to delete this job?");
          if (!conf) {
            return;
          }
          const jobId = $(this).data("id");
          $.ajax({
            url: `/recruiter/jobs/${jobId}/delete`,
            type: "PUT",
            success: function (response) {
              console.log(response);

              $(`#row-${jobId}`).remove();
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;

              const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";

              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });
            },
          });
        });

        function handleAuthRedirect(error) {
          const response = error.responseJSON;
          if (error.status === 401) {
            window.location.href = "/auth/login";
            return true;
          }
          return false;
        }
      });
    </script>
  </body>
</html>
