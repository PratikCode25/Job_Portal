<!DOCTYPE html>
<html lang="en">
  <%-include('./layouts/head') %>

  <body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">
      <!-- Sidebar -->
      <%-include('./layouts/sidebar') %>
      <!-- End of Sidebar -->

      <!-- Content Wrapper -->
      <div id="content-wrapper" class="d-flex flex-column">
        <!-- Main Content -->
        <div id="content">
          <!-- Topbar -->
          <%-include('./layouts/topbar') %>
          <!-- End of Topbar -->

          <!-- Begin Page Content -->
          <div class="container-fluid">
            <!-- Page Heading -->
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
              <h1 class="h3 mb-0 text-gray-800">Manage Applications</h1>
            </div>

            <h4 class="mb-4">
              Applications for: <strong><%=jobTitle %></strong> <small class="text-muted"><%= '(#'+jobId.slice(-6).toUpperCase()+')' %></small>
            </h4>
            <input type="hidden" name="jobId" id="jobId" value="<%=jobId%>" />
            <div class="row">
              <!-- Left: Candidate List -->
              <div class="col-md-4 candidate-list bg-white p-3 shadow-sm rounded" id="applicantContainer" style="height: 500px; overflow-y: auto">
                <div class="row mb-3">
                  <div class="col-md-7">
                    <input type="text" class="form-control" id="searchInput" placeholder="Search name or email" />
                  </div>
                  <div class="col-md-5">
                    <select class="form-control" id="statusFilter">
                      <option value="">All Statuses</option>
                      <option value="applied">Applied</option>
                      <option value="accepted">Accepted</option>
                      <option value="rejected">Rejected</option>
                    </select>
                  </div>
                </div>

                <div id="applicant-summary" class="text-muted small mb-2"></div>

                <ul class="list-group" id="applicant-list"></ul>

                <div class="text-center mt-3" id="load-more-container" style="display: none">
                  <button class="btn btn-primary" id="loadMoreBtn">Load More</button>
                  <div id="loading-message" class="mt-2 text-muted" style="display: none">Loading...</div>
                </div>
              </div>

              <!-- Right: Detail View -->
              <div class="col-md-8" id="applicant-detail">
                <div class="bg-white p-5 shadow-sm rounded detail-placeholder">Select an applicant to view details</div>
              </div>
            </div>
          </div>
          <!-- /.container-fluid -->
        </div>
        <!-- End of Main Content -->

        <!-- Footer -->
        <%-include('./layouts/footer') %>
        <!-- End of Footer -->
      </div>
      <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
      <i class="fas fa-angle-up"></i>
    </a>

    <%-include('./layouts/footer-scripts') %>
    <script>
      $(document).ready(function () {
        let page = 1;
        const limit = 5;
        let searchText = "";
        let status = "";

        let totalApplications = 0;
        let loadedApplications = 0;

        const jobId = $("#jobId").val();

        function updateSummary() {
          $("#applicant-summary").text(`Showing ${loadedApplications} of ${totalApplications} applicants`);
        }

        function loadApplicants(reset = false) {
          if (reset) {
            page = 1;
            loadedApplications = 0;
            $("#applicant-list").empty();
          }

          $("#loading-message").show();
          $("#loadMoreBtn").prop("disabled", true);

          $.ajax({
            url: `/recruiter/applications/${jobId}`,
            method: "GET",
            data: {
              page,
              limit,
              search: searchText,
              status: status,
            },
            success: function (response) {
              // console.log(response);

              const applications = response.data;
              totalApplications = response.totalApplications || 0;

              if (applications.length === 0 && page === 1) {
                $("#applicant-list").append(`<li class="list-group-item">No matching applicants.</li>`);
                $("#load-more-container").hide();
                updateSummary();
                return;
              }

              applications.forEach((application) => {
                $("#applicant-list").append(`
            <li class="list-group-item candidate-item d-flex justify-content-between align-items-center" data-id="${application._id}">
              <div>
                <div class="font-weight-bold">${application.candidate?.name}</div>
                <small class="text-muted">Applied on: ${new Date(application.applicationDate).toLocaleDateString("en-IN", {
                  day: "2-digit",
                  month: "2-digit",
                  year: "numeric",
                })}</small>
              </div>
              <span id="app-list-status-${application._id}" class="badge badge-${getBadge(application.status)}">${application.status}</span>
            </li>
          `);
              });

              loadedApplications += applications.length;
              updateSummary();

              // console.log(loadedApplications, totalApplications);

              if (loadedApplications >= totalApplications) {
                $("#load-more-container").hide();
              } else {
                console.log("hey");
                $("#load-more-container").show();
              }

              page++;
            },
            error: function (error) {
              if (handleAuthRedirect(error)) return;
              alert(error.responseJSON.message || "Something went wrong.");
            },
            complete: function () {
              $("#loading-message").hide();
              $("#loadMoreBtn").prop("disabled", false);
            },
          });
        }

        function getBadge(status) {
          switch (status) {
            case "applied":
              return "secondary";
            case "accepted":
              return "success";
            case "rejected":
              return "danger";
            default:
              return "light";
          }
        }

        $("#loadMoreBtn").on("click", function () {
          loadApplicants();
        });

        function debounce(fn, delay) {
          let timer;
          return function (...args) {
            clearTimeout(timer);
            timer = setTimeout(() => fn.apply(this, args), delay);
          };
        }

        const onFilterChange = debounce(function () {
          searchText = $("#searchInput").val().trim();
          status = $("#statusFilter").val();
          loadApplicants(true);
        }, 500);

        $("#searchInput").on("input", onFilterChange);
        $("#statusFilter").on("change", onFilterChange);

        loadApplicants();

        function capitalizeWords(text) {
          return text
            .split(" ")
            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
            .join(" ");
        }

        $("#applicant-list").on("click", ".candidate-item", function () {
          const applicationId = $(this).data("id");

          $("#applicant-detail").empty();

          $.ajax({
            url: `/recruiter/applications/${applicationId}/details`,
            type: "GET",
            success: function (response) {
              console.log(response);

              const application = response.data;

              const c = application.candidateInfo;
              const p = c.profile || {};

              const skills =
                c.profile.skills && c.profile.skills.length > 0
                  ? c.profile.skills.map((item) => `<span class="badge border border-secondary mr-1 mb-1">${item.name}</span>`).join("")
                  : "Not provided";

              let workstatus = p.workstatus || "Not Provided";
              let totalExpYears = p.totalExperience?.years || 0;
              let totalExpMonths = p.totalExperience?.months || 0;

              if (totalExpYears > 15) {
                totalExpYears = "15+";
                totalExpMonths = "";
              }

              const totalExperience = `${totalExpYears ? totalExpYears + " years " : ""}${totalExpMonths ? totalExpMonths + " months" : ""}`;

              if (workstatus === "experienced") {
                workstatus = capitalizeWords(workstatus) + " (" + totalExperience.trim() + ")";
              }

              const resumeUrl = application.resume?.path ? `/${application.resume.path}` : "";
              const resumeName = application.resume?.originalName ? application.resume?.originalName : "";

              let actionHtml = "";

              if (application.status == "applied") {
                actionHtml = `
    <div class="d-flex" id="application-actions">
      <button class="btn btn-success mr-2 app-action-btn" data-id="${application._id}" data-action="accept">
        <i class="fas fa-check mr-1"></i> Accept
      </button>
      <button class="btn btn-danger app-action-btn" data-id="${application._id}" data-action="reject">
        <i class="fas fa-times mr-1"></i> Reject
      </button>
    </div>
  `;
              } else {
                const badgeClass = application.status === "accepted" ? "success" : "danger";

                const statusText = application.status.charAt(0).toUpperCase() + application.status.slice(1);

                actionHtml = `
    <div id="application-actions">
      <span class="badge badge-${badgeClass}" style="font-size: 1.25rem;">${statusText}</span>
    </div>
  `;
              }

              const html = `
                  <div class="bg-white p-4 shadow-sm rounded h-100">
  <!-- Profile Header -->
  <div class="d-flex align-items-center mb-4">
    <img src="${
      c.profilePicture ? "/" + c.profilePicture : "/assets/img/no-image.png"
    }" alt="Profile Picture" class="rounded-circle mr-3 border" width="80" height="80">
    <div>
      <h5 class="mb-1"><i class="fas fa-user mr-1 text-primary"></i> ${c.name}</h5>
      <p class="mb-0 text-muted small"><i class="fas fa-envelope mr-1"></i>  ${c.email}</p>
      <p class="mb-0 text-muted small"><i class="fas fa-phone-alt mr-1"></i> ${p?.phone || "Not provided"}</p>
    </div>
     <a href="/recruiter/view-candidate/${c._id}" target="_blank" class="btn btn-sm btn-outline-info ml-auto">
    <i class="fas fa-external-link-alt mr-1"></i> Preview Profile
  </a>
  </div>

  <hr>

  <div class="mb-3">
    <h6><i class="fas fa-tools mr-1 text-info"></i> Skills</h6>
    <div>
      ${skills}
    </div>
  </div>

  <!-- Work Status -->
  <div class="mb-3">
    <h6><i class="fas fa-briefcase mr-1 text-success"></i> Work Status</h6>
    <p class="mb-0">${workstatus}</p>
  </div>

  
  <!-- Resume -->
<div class="mb-3 text-muted small d-flex align-items-center">
  <i class="fas fa-info-circle mr-2 text-secondary"></i>
  <span>For a complete understanding of the candidate’s background, skills, and experience, please refer to their attached resume.</span>
</div>

  <div class="mb-4">
    <h6><i class="fas fa-file-download mr-1 text-secondary"></i> Resume</h6>
    <a href="${resumeUrl}" class="btn btn-outline-primary btn-sm" target="_blank">
      <i class="fas fa-download mr-1"></i>${resumeName}
    </a>
  </div>

  <!-- Action Buttons -->
  ${actionHtml}
</div>
                
                `;

              $("#applicant-detail").html(html);
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;
              const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";

              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });
            },
          });
        });

        $("#applicant-detail").on("click", ".app-action-btn", function () {
          const btn = $(this);
          const applicationId = $(this).data("id");
          const action = $(this).data("action");

          const conf = confirm(`Do you want to ${action} this application`);
          if (!conf) return;

          const originalHtml = btn.html();

          btn.prop("disabled", true).html(`
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        <span class="ml-1">Processing...</span>
    `);

          $.ajax({
            url: `/recruiter/applications/${applicationId}/${action}`,
            type: "PUT",
            success: function (response) {
              const statusText = action === "accept" ? "Accepted" : "Rejected";
              const badgeClass = action === "accept" ? "success" : "danger";

              $("#application-actions").html(`<span class="badge badge-${badgeClass}">${statusText}</span>`);

              $(`#app-list-status-${applicationId}`).removeClass().addClass(`badge badge-${badgeClass}`).text(statusText);

              btn.prop("disabled", false).html(originalHtml);
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;
             const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";

              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });

              btn.prop("disabled", false).html(originalHtml);
            },
          });
        });

        // $("#searchInput, #statusFilter").on("input change", function () {
        //   page = 1;
        //   allLoaded = false;
        //   $("#applicant-list").empty();
        //   loadApplicants();
        // });

        function handleAuthRedirect(error) {
          const response = error.responseJSON;
          if (error.status === 401) {
            window.location.href = "/auth/login";
            return true;
          }
          return false;
        }
      });
    </script>
  </body>
</html>
