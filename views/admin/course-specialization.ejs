<!DOCTYPE html>
<html lang="en">
  <%-include('./layouts/head') %>

  <body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">
      <!-- Sidebar -->
      <%-include('./layouts/sidebar') %>
      <!-- End of Sidebar -->

      <!-- Content Wrapper -->
      <div id="content-wrapper" class="d-flex flex-column">
        <!-- Main Content -->
        <div id="content">
          <!-- Topbar -->
          <%-include('./layouts/topbar') %>
          <!-- End of Topbar -->

          <!-- Begin Page Content -->
          <div class="container-fluid">
            <!-- Page Heading -->
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
              <h1 class="h3 mb-0 text-gray-800">Manage course & specialization</h1>
            </div>

            <div class="container">
              <ul class="nav nav-tabs" id="adminTab" role="tablist">
                <li class="nav-item">
                  <a class="nav-link active" id="course-tab" data-toggle="tab" href="#course" role="tab">Courses</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" id="specialization-tab" data-toggle="tab" href="#specialization" role="tab">Specializations</a>
                </li>
              </ul>

              <div class="tab-content" id="adminTabContent">
                <!-- Course Tab -->
                <div class="tab-pane fade show active" id="course" role="tabpanel">
                  <div class="card shadow p-3 mb-3 mt-3" style="max-width: 500px; margin: auto">
                    <h5 class="card-title text-primary mb-3">Add Course</h5>
                    <div id="addCourseMessageArea" class="mb-3"></div>
                    <form id="addCourseForm">
                      <div class="mb-3">
                        <label for="add-educationLevel" class="form-label required">Education Level</label>
                        <select id="add-educationLevel" name="educationLevel" class="form-control">
                          <option value="">-- Select Education Level --</option>
                          <option value="Diploma">Diploma</option>
                          <option value="Graduation">Graduation</option>
                          <option value="Post Graduation">Post Graduation</option>
                        </select>
                        <div class="text-danger" id="add-course-educationLevel-error"></div>
                      </div>

                      <div class="mb-3">
                        <label for="add-course-name" class="form-label required">Course Name</label>
                        <input type="text" id="add-course-name" name="name" class="form-control" />
                        <div class="text-danger" id="add-course-name-error"></div>
                      </div>
                      <button type="submit" class="btn btn-primary">Save</button>
                    </form>
                  </div>

                  <div class="card shadow mb-4 mt-3">
                    <div class="card-header py-3">
                      <h6 class="m-0 font-weight-bold text-primary">Courses List</h6>
                    </div>

                    <div class="card-body">
                      <div class="table-responsive">
                        <table class="table table-bordered table-sm text-dark" id="courseTable" width="100%" cellspacing="0">
                          <thead>
                            <tr>
                              <th>Education Level</th>
                              <th>Course</th>
                              <th>Action</th>
                            </tr>
                          </thead>
                        </table>
                      </div>
                    </div>
                  </div>

                  <div class="modal fade" id="editCourseModal" tabindex="-1" role="dialog" aria-labelledby="editCourseModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                      <input type="hidden" id="courseId" name="courseId" value="" />
                      <form id="editCourseForm">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title" id="editCourseModalLabel">Edit Course</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>

                          <div class="modal-body">
                            <div class="mb-3">
                              <label for="edit-educationLevel" class="form-label required">Education Level</label>
                              <select id="edit-educationLevel" name="educationLevel" class="form-control">
                                <option value="">-- Select Education Level --</option>
                                <option value="Diploma">Diploma</option>
                                <option value="Graduation">Graduation</option>
                                <option value="Post Graduation">Post Graduation</option>
                              </select>
                              <div class="text-danger" id="edit-course-educationLevel-error"></div>
                            </div>
                            <div class="form-group">
                              <label for="edit-course-name" class="required">Course Name</label>
                              <input type="text" class="form-control" id="edit-course-name" name="name" value="" />
                              <div class="text-danger" id="edit-course-name-error"></div>
                            </div>
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>
                </div>

                <!-- Specialization Tab -->
                <div class="tab-pane fade" id="specialization" role="tabpanel">
                  <div class="card shadow p-3 mb-3 mt-3" style="max-width: 500px; margin: auto">
                    <h5 class="card-title text-primary mb-3">Add Specialization</h5>
                    <div id="addSpecializationMessageArea" class="mb-3"></div>
                    <form id="addSpecializationForm">
                      <div class="mb-3">
                        <label for="add-course" class="form-label required">Course Name</label>
                        <select id="add-course" name="course" class="form-control">
                          <option value="">-- Select Course --</option>
                        </select>
                        <div class="text-danger" id="add-specialization-course-error"></div>
                      </div>

                      <div class="mb-3">
                        <label for="add-specialization-name" class="form-label required">Specialization Name</label>
                        <input type="text" id="add-specialization-name" name="name" class="form-control" />
                        <div class="text-danger" id="add-specialization-name-error"></div>
                      </div>
                      <button type="submit" class="btn btn-primary">Save</button>
                    </form>
                  </div>

                  <div class="card shadow mb-4 mt-3">
                    <div class="card-header py-3">
                      <h6 class="m-0 font-weight-bold text-primary">Specialiaztion List</h6>
                    </div>

                    <div class="card-body">
                      <div class="table-responsive">
                        <table class="table table-bordered table-sm text-dark" id="specializationTable" width="100%" cellspacing="0">
                          <thead>
                            <tr>
                              <th>Course</th>
                              <th>Specialization</th>
                              <th>Action</th>
                            </tr>
                          </thead>
                        </table>
                      </div>
                    </div>
                  </div>

                  <div
                    class="modal fade"
                    id="editSpecializationModal"
                    tabindex="-1"
                    role="dialog"
                    aria-labelledby="editSpecializationModalLabel"
                    aria-hidden="true"
                  >
                    <div class="modal-dialog" role="document">
                      <input type="hidden" id="specializationId" name="specializationId" value="" />
                      <form id="editSpecializationForm">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title" id="editSpecializationModalLabel">Edit Specialiaztion</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>

                          <div class="modal-body">
                            <div class="mb-3">
                              <label for="edit-course" class="form-label required">Course Name</label>
                              <select id="edit-course" name="course" class="form-control">
                                <option value="">-- Select Course --</option>
                              </select>
                              <div class="text-danger" id="edit-specialization-course-error"></div>
                            </div>

                            <div class="mb-3">
                              <label for="edit-specialization-name" class="form-label required">Specialization Name</label>
                              <input type="text" id="edit-specialization-name" name="name" class="form-control" />
                              <div class="text-danger" id="edit-specialization-name-error"></div>
                            </div>
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- /.container-fluid -->
        </div>
        <!-- End of Main Content -->

        <!-- Footer -->
        <%-include('./layouts/footer') %>
        <!-- End of Footer -->
      </div>
      <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
      <i class="fas fa-angle-up"></i>
    </a>

    <%-include('./layouts/footer-scripts') %>

    <script>
      $(document).ready(function () {
        $("#addCourseForm").on("submit", function (e) {
          e.preventDefault();

          const educationLevel = $("#add-educationLevel").val().trim();
          const name = $("#add-course-name").val().trim();

          let hasError = false;

          if (!educationLevel) {
            $("#add-course-educationLevel-error").text("Education level name is requied.");
            hasError = true;
          }
          if (!name) {
            $("#add-course-name-error").text("Course name is requied.");
            hasError = true;
          }

          if (hasError) return;

          $.ajax({
            url: "/admin/courses",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ educationLevel, name }),
            success: function (response) {
              $("#addCourseMessageArea").html(`
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          ${response.message}
         <button type="button" class="close" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
          </button>
        </div>
      `);

              setTimeout(() => {
                $(".alert").alert("close");
              }, 3000);

              $("#addCourseForm")[0].reset();
              $("#addCourseForm .text-danger").text("");
              $("#courseTable").DataTable().ajax.reload(null, false);
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;

              if (xhr.responseJSON && xhr.responseJSON.errors) {
                const errors = xhr.responseJSON.errors;
                for (let field in errors) {
                  $("#" + "add-course-" + field + "-error").text(errors[field]);
                }
              }

              if (xhr.responseJSON && xhr.responseJSON.message) {
                Swal.fire({
                  icon: "error",
                  title: "Oops...",
                  text: xhr.responseJSON.message,
                  showConfirmButton: true,
                });
              }
            },
          });
        });

        function fetchCourses() {
          $("#courseTable").DataTable({
            ajax: {
              url: "/admin/courses",
              dataSrc: "data",
            },
            columns: [
              { data: "educationLevel" },
              { data: "name" },
              {
                data: null,
                orderable: false,
                render: function (data) {
                  return `
           <button class="btn btn-sm text-warning edit-btn" data-id="${data._id}" title="Edit" style="background: none; border: none;">
        <i class="fas fa-pen"></i>
      </button>
      <button class="btn btn-sm text-danger delete-btn" data-id="${data._id}" title="Delete" style="background: none; border: none;">
        <i class="fas fa-trash"></i>
      </button>
        `;
                },
              },
            ],
          });
        }

        fetchCourses();

        $("#courseTable").on("click", ".edit-btn", function () {
          const id = $(this).data("id");

          $("#edit-course-name-error").text("");
          $("#edit-course-educationLevel-error").text("");

          $.ajax({
            url: "/admin/courses/" + id,
            type: "GET",
            success: function (response) {
              $("#courseId").val(response.data._id);
              $("#edit-course-name").val(response.data.name);
              $("#edit-educationLevel").val(response.data.educationLevel);
              $("#editCourseModal").modal("show");
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;

              const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });
            },
          });
        });

        $("#editCourseForm").submit(function (e) {
          e.preventDefault();

          $("#edit-course-name-error").text("");
          $("#edit-course-educationLevel-error").text("");

          const name = $("#edit-course-name").val().trim();
          const educationLevel = $("#edit-educationLevel").val().trim();

          let hasError = false;
          if (!educationLevel) {
            $("#edit-course-educationLevel-error").text("Education level name is requied.");
            hasError = true;
          }

          if (!name) {
            $("#edit-course-name-error").text("Course name is requied.");
            hasError = true;
          }

          if (hasError) return;

          $.ajax({
            url: "/admin/courses/" + $("#courseId").val() + "/update",
            type: "PUT",
            contentType: "application/json",
            data: JSON.stringify({ educationLevel, name }),
            success: function (response) {
              $("#courseTable").DataTable().ajax.reload(null, false);
              $("#editCourseModal").modal("hide");
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;
              if (xhr.responseJSON && xhr.responseJSON.errors) {
                const errors = xhr.responseJSON.errors;
                for (let field in errors) {
                  $("#" + "edit-course-" + field + "-error").text(errors[field]);
                }
              }

              if (xhr.responseJSON && xhr.responseJSON.message) {
                Swal.fire({
                  icon: "error",
                  title: "Oops...",
                  text: xhr.responseJSON.message,
                  showConfirmButton: true,
                });
              }
            },
          });
        });

        $("#courseTable").on("click", ".delete-btn", function () {
          const id = $(this).data("id");

          const conf = confirm("Do you want to delete this course.?");
          if (!conf) {
            return false;
          }

          $.ajax({
            url: "/admin/courses/" + id + "/delete",
            type: "DELETE",
            contentType: "application/json",
            success: function (response) {
              $("#courseTable").DataTable().ajax.reload(null, false);
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;

              const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";

              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });
            },
          });
        });

        $("#addSpecializationForm").on("submit", function (e) {
          e.preventDefault();

          const course = $("#add-course").val();
          const name = $("#add-specialization-name").val().trim();

          let hasError = false;

          if (!course) {
            $("#add-specialization-course-error").text("Course is requied.");
            hasError = true;
          }
          if (!name) {
            $("#add-specialization-name-error").text("Specialiaztion name is requied.");
            hasError = true;
          }

          if (hasError) return;

          $.ajax({
            url: "/admin/specializations",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ course, name }),
            success: function (response) {
              $("#addSpecializationMessageArea").html(`
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          ${response.message}
         <button type="button" class="close" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
          </button>
        </div>
      `);

              setTimeout(() => {
                $(".alert").alert("close");
              }, 3000);

              $("#addSpecializationForm")[0].reset();
              $("#addSpecializationForm .text-danger").text("");
              $("#specializationTable").DataTable().ajax.reload(null, false);
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;

              if (xhr.responseJSON && xhr.responseJSON.errors) {
                const errors = xhr.responseJSON.errors;
                for (let field in errors) {
                  $("#" + "add-specialization-" + field + "-error").text(errors[field]);
                }
              }

              if (xhr.responseJSON && xhr.responseJSON.message) {
                Swal.fire({
                  icon: "error",
                  title: "Oops...",
                  text: xhr.responseJSON.message,
                  showConfirmButton: true,
                });
              }
            },
          });
        });

        function fetchSpecializations() {
          $("#specializationTable").DataTable({
            ajax: {
              url: "/admin/specializations",
              dataSrc: "data",
            },
            columns: [
              { data: "course.name" },
              { data: "name" },
              {
                data: null,
                orderable: false,
                render: function (data) {
                  return `
           <button class="btn btn-sm text-warning edit-btn" data-id="${data._id}" title="Edit" style="background: none; border: none;">
        <i class="fas fa-pen"></i>
      </button>
      <button class="btn btn-sm text-danger delete-btn" data-id="${data._id}" title="Delete" style="background: none; border: none;">
        <i class="fas fa-trash"></i>
      </button>
        `;
                },
              },
            ],
          });
        }

        fetchSpecializations();

        function setCourseOptions() {
          $("#add-course").html("");
          $("#add-course").append('<option value="">-- Select Course --</option>');
          $.ajax({
            url: "/admin/courses/",
            type: "GET",
            success: function (response) {
              response.data.forEach((item) => {
                $("#add-course").append(`<option value="${item._id}">${item.name}</option>`);
              });
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;

              const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";

              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });
            },
          });
        }

        setCourseOptions();

        function setEditCourseOptions(selectedCourseId) {
          $("#edit-course").html('<option value="">-- Select Course --</option>');

          $.ajax({
            url: "/admin/courses/",
            type: "GET",
            success: function (response) {
              response.data.forEach((item) => {
                const isSelected = item._id === selectedCourseId ? "selected" : "";
                $("#edit-course").append(`<option value="${item._id}" ${isSelected}>${item.name}</option>`);
              });
            },
            error: function (xhr) {
              const errorMsg = xhr.responseJSON?.message || "Failed to load courses.";
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
              });
            },
          });
        }

        $("#specializationTable").on("click", ".edit-btn", function () {
          const id = $(this).data("id");

          $("#edit-specialization-name-error").text("");
          $("#edit-specialization-course-error").text("");

          $.ajax({
            url: "/admin/specializations/" + id,
            type: "GET",
            success: function (response) {
              $("#specializationId").val(response.data._id);
              $("#edit-specialization-name").val(response.data.name);
              setEditCourseOptions(response.data.course);
              $("#editSpecializationModal").modal("show");
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;

              const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });
            },
          });
        });

        $("#editSpecializationForm").submit(function (e) {
          e.preventDefault();

          $("#edit-specialization-course-error").text("");
          $("#edit-specialization-name-error").text("");

          const course = $("#edit-course").val();
          const name = $("#edit-specialization-name").val().trim();

          let hasError = false;

          if (!course) {
            $("#edit-specialization-course-error").text("Course is requied.");
            hasError = true;
          }
          if (!name) {
            $("#edit-specialization-name-error").text("Specialiaztion name is requied.");
            hasError = true;
          }

          if (hasError) return;

          $.ajax({
            url: "/admin/specializations/" + $("#specializationId").val() + "/update",
            type: "PUT",
            contentType: "application/json",
            data: JSON.stringify({ course, name }),
            success: function (response) {
              $("#specializationTable").DataTable().ajax.reload(null, false);
              $("#editSpecializationModal").modal("hide");
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;
              if (xhr.responseJSON && xhr.responseJSON.errors) {
                const errors = xhr.responseJSON.errors;
                for (let field in errors) {
                  $("#" + "edit-specialization-" + field + "-error").text(errors[field]);
                }
              }

              if (xhr.responseJSON && xhr.responseJSON.message) {
                Swal.fire({
                  icon: "error",
                  title: "Oops...",
                  text: xhr.responseJSON.message,
                  showConfirmButton: true,
                });
              }
            },
          });
        });

        $("#specializationTable").on("click", ".delete-btn", function () {
          const id = $(this).data("id");

          const conf = confirm("Do you want to delete this specialization?");
          if (!conf) {
            return false;
          }

          $.ajax({
            url: "/admin/specializations/" + id + "/delete",
            type: "DELETE",
            contentType: "application/json",
            success: function (response) {
              $("#specializationTable").DataTable().ajax.reload(null, false);
            },
            error: function (xhr) {
              if (handleAuthRedirect(xhr)) return;

              const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : "Something went wrong. Please try again later.";

              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: errorMsg,
                showConfirmButton: true,
              });
            },
          });
        });

        function handleAuthRedirect(error) {
          const response = error.responseJSON;
          if (error.status === 401) {
            window.location.href = "/auth/login";
            return true;
          }
          return false;
        }
      });
    </script>
  </body>
</html>
